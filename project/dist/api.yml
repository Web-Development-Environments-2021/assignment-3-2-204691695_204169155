openapi: 3.0.0
info:
 # when we paste our API we neeed to remove the server section  
  title: Football Association Management System API
  description: Tom & Asaf -Football Association Management System  API
  contact:
    name: Tom & Asaf
    url: https://in.bgu.ac.il/en/Pages/default.aspx
  version: 1.0.0
tags:
  - name: Users
    description: All the user's personal info
  - name: Auth
    description: User authentication - Login and Register
  - name: League
    description: Get Suprliga Details
  - name: Players
    description: get all relavent player information by ID
  - name: Games
    description: get all relevant the data of a given Game
  - name: Teams
    description: get all relavent team information by ID
  - name: Search
    description: Search for players and Teams 
  - name: Season
    description: get all games in the curent league
  - name: FAR
    description: FAR page for CRUD requests - only the FAR can access this route
paths:
#  -------- Auth Routes ----------
  /Register:
    post:
      tags:
        - Auth
      summary: Add new user to DB
      description: A new user from the client is added to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Register"
      responses:
        "201":
          description: User created
        "409":
          description: Username taken
  /Login:
    post:
      tags:
        - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: >
            User was found in the DB and authenitcated successfully.
            The session ID is returned in a cookie named `session`. 
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session=8dsf8esaf65c1xdf3ax2asdcz3asd
          # Note that the Set-Cookie header and securitySchemes are not connected in any way, and the Set-Header definition is for documentation purposes only.
        "401":
          description: Authentication failed
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
      security:
      - cookieAuth: []
# -------- League Routes --------- 
  /league/getDetails:
    get:
      tags:
        - League
      summary: Return the details about the current league
      responses:
        "200":
          description: data about the current league returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/League"
# -------- User Routes --------- 
  /users/favoriteGames:
    get:
      tags:
        - Users
        - Games
      summary: Return the favorite Games that were saved by user
      parameters:
      responses:
        "201":
          description: data about the user's favorites Games returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GamePreview"
        "400":
          description: user is not authorized
    post:
      summary: save game in the favorites list of a user
      tags:
        - Users
        - Games
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                playerId:
                  type: string
                  description: game id which the user saved
                  example: 1
      responses:
        "201":
          description: The Game successfully saved as favorite
        "400":
          description: Game is already in the user's 'Favorite Games'/ Game date must be in the future/ Wrong Game ID
# -------- Teams Routes ---------
  /teams/page/{teamId}:
    get:
      summary: get full deatils about a team
      description: useful for team page
      tags:
        - Teams
      parameters:
        - in: path
          name: teamId
          description: team's id
          required: true
          schema:
            type: integer
      responses:
        "201":
          description: data about the team
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamFull"
        "403":
          description: teamId is not exists
# -------- players Routes ---------
  /players/page/{playerId}:
    get:
      summary: get full deatils about a player
      description: useful for player page
      tags:
        - Players
      parameters:
        - in: path
          name: playerId
          description: Player id
          required: true
          schema:
            type: integer
      responses:
        "201":
          description: data about the player
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerFullDetails"
        "403":
          description: playerId is not exists
# -------- Search Routes ---------
  /search/players:
    get:
      summary: Search for player by name
      description:  'Search for player by name , can filter by : team name , player position'
      tags:
        - Search
        - Players
      parameters:
      - name: playerName
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Sten Michael
      - name: playerPosition
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: int
          example: 1
      - name: groupName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: KÃ¸benhavn
      responses:
        "201":
          description: data about the player's
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerPreview"
        "400":
          description: You must enter a player name
  /search/teams/:teamName:
    get:
      summary: get details about team by name
      description: get all relavnt teams that respond to the given name
      tags:
        - Search
        - Teams
      parameters:
        - in: path
          name: teamName
          description: Team Name
          required: true
          schema:
            type: string
      responses:
        "201":
          description: data about the player
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamPreview"
        "403":
          description: playerId is not exists
components:
  schemas:
# -------- Auth schemas --------
    Register:
      type: object
      properties:
        username:
          $ref: '#/components/schemas/UserName'
        fname:
          type: string
          description: user's first name
          example: Asaf
        lname:
          type: string
          description: user's last name
          example: Salomon
        contry:
          type: string
          description: contry listed in 'https://restcountries.eu/rest/v2/all'
          example: Israel
        password:
          $ref: '#/components/schemas/Password'
        Confirmpassword:
          $ref: '#/components/schemas/ConfirmPassword'
        email:
          type: string
          description: user's email.
          example: example@email.com
        profilePic:
          type: string
          description: url of picture
          example: https://www.akamai.com/us/en/multimedia/images/video/akamai-api-video-thumbnail.jpg?imwidth=1366
      description: all data needed to create new user
    Login:
      type: object
      properties:
        username:
          $ref: '#/components/schemas/UserName'
        password:
          $ref: '#/components/schemas/Password'
      description: all data needed to login a user to the system
    UserName:
      maxLength: 8
      minLength: 3
      pattern: '^[A-Za-z]+$'
      type: string
      description: user's username. english letters only
      example: TomAsi
    Password:
      maxLength: 10
      minLength: 5
      pattern: '^(?=.\d)(?=.?[#?!@$%^&*-]).{5,10}$'
      type: string
      description: user's password, atleast 1 digit & 1 capital letter and one special charachter.
      example: Password12
    ConfirmPassword:
      maxLength: 10
      minLength: 5
      pattern: '^(?=.\d)(?=.?[#?!@$%^&*-]).{5,10}$'
      type: string
      description: user's confirm password must be identical
      example: Password12
# -------- League schemas --------
    League:
      type: object
      properties:
        league_name:
          type: string
          description: league name
          example: Superliga
        current_season_name:
          type: string
          description: current season name
          example: "2020/2021"
        current_stage_name:
          type: string
          description: current stage name
          example: Championship Round
        next_game:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/GamePreview"
        FavoriteGames:
          type: string
          description: if there is a logged user with favorite games at most 3 of them will be presented here
          example: same as next_game
# -------- Player schemas --------
    PlayerPreview:
      type: object
      properties:
        player_id:
          type: int
          description: player's id
          example: 84587
        name:
          type: string
          description: player's name
          example: Sten Michael Grytebust
        image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
        position:
          type: integer
          description: player's position in team
          example: 1
        team_name:
          type: string
          description: player's team name
          example: KÃ¸benhavn
    PlayerFullDetails:
      type: object
      properties:
        player_id:
          type: int
          description: player's id
          example: 84587
        name:
          type: string
          description: player's name
          example: Sten Michael Grytebust
        image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
        position:
          type: integer
          description: player's position in team
          example: 1
        team_name:
          type: string
          description: player's team name
          example: KÃ¸benhavn
        common_name:
          type: string
          description: player's common name
          example: S. Grytebust
        nationality:
          type: string
          description: player's nationality
          example: Norway
        birthdate:
          type: string
          description: player's birthdate
          example: '25/10/1989'
        birthcountry:
          type: string
          description: player's birthcountry
          example: Norway
        height:
          type: string
          description: player's height
          example: 185 cm
        weight:
          type: string
          description: player's weight
          example: 86 kg
# -------- Game schemas --------
    GamePreview:
      type: object
      properties:
        game_id:
          type: int
          description: Game id
          example: 42
        homeTeam_id:
          type: int
          description: Home team ID
          example: 85
        visitorTeam_id:
          type: int
          description: Visitor team ID
          example: 7466
        game_date:
          type: string
          description: Game date
          example: '2021-07-01'
        game_hour:
          type: string
          description: Game hour
          example: '14:00:00'
        game_timestamp:
          type: float
          description: game timestamp from 1970
          example: 1625133600000
        referee:
          type: int
          description: referee ID
          example: 1564
        stadium:
          type: string
          description: the name of the stadium the game was/will play/played
          example: Ceres Park
        score:
          type: string
          description: the score of the game - null for games that didnt happened yet
          example: null
        homeTeam_name:
          type: string
          description: name of the Home Team
          example: KÃ¸benhavn
        visitorTeam_name:
          type: string
          description: name of the Visitor Team
          example: Vejle
# -------- Team schemas --------
    TeamFull:
      type: object
      properties:
        players:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/PlayerPreview"
        past_games:
          type: object
          additionalProperties:
            type: string
          description: get the details of the next game in the league 
          example:
            game_id: 42
            homeTeam_id: 85
            visitorTeam_id: 7466
            game_date: 2021-04-01
            game_hour: 13:00:00
            game_timestamp: 1625133600000
            referee: 1564
            stadium: Ceres Park
            score: 1-1
            homeTeam_name: Midtjylland
            visitorTeam_name: BrÃ¸ndby
        future_games:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/GamePreview"
    TeamPreview:
      type: object
      properties:
        team_id:
          type: int
          description: team's id
          example: 258
        name:
          type: string
          description: team's name
          example: Livingston
        logo:
          type: string
          description: team's logo
          format: URL
          example: https://cdn.sportmonks.com/images//soccer/teams/2/258.png